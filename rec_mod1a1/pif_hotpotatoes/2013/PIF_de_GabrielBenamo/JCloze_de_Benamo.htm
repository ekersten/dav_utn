<?xml version="1.0"?>
       <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "xhtml11.dtd">
       <html xmlns="http://www.w3.org/1999/xhtml"
             xml:lang="en"><head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to GABRIEL."></meta><meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>

<link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" />
<meta name="DC:Creator" content="GABRIEL" />
<meta name="DC:Title" content="FABULA SOBRE EL ORIGEN DEL AJEDREZ" />


<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> 

<title>
FABULA SOBRE EL ORIGEN DEL AJEDREZ
</title>

<!-- Made with executable version 6.3 Release 0 Build 5 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->



<style type="text/css">


/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */

/* BeginCorePageCSS */

/* Made with executable version 6.3 Release 0 Build 5 */


/* Hack to hide a nested Quicktime player from IE, which can't handle it. */
* html object.MediaPlayerNotForIE {
	display: none;
}

body{
	font-family: arial,helvetica,sans-serif;
	background-color: #800000;
	color: #000000;
 
	margin-right: 5%;
	margin-left: 5%;
	font-size: small;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

table,div,span,td{
	font-size: 100%;
	color: #000000;
}

div.Titles{
	padding: 0.5em;;
	text-align: center;
	color: #ffffff;
}

button{
	font-family: arial,helvetica,sans-serif;
	font-size: 100%;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: #ffffff;
}

.ExerciseSubtitle{
	font-size: 120%;
	color: #ffffff;
}

div.StdDiv{
	background-color: #ff8000;
	text-align: center;
	font-size: 100%;
	color: #000000;
	padding: 0.5em;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: #000000;
	margin-bottom: 1px;
}

/* EndCorePageCSS */

.RTLText{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", arial,helvetica,sans-serif; 
}

.CentredRTLText{
	text-align: center;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", arial,helvetica,sans-serif; 
}

button p.RTLText{
	text-align: center;
}

.RTLGapBox{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Times New Roman", arial,helvetica,sans-serif;
}

.Guess{
	font-weight: bold;
}

.CorrectAnswer{
	font-weight: bold;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: #ffffff;
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: #ffffff;
}

span.Instructions{

}

div.ExerciseText{

}

.FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
	color: #ffffff;
}

.LeftItem{
	font-size: 100%;
	color: #000000;
	text-align: left;
}

.RightItem{
	font-weight: bold;
	font-size: 100%;
	color: #000000;
}

span.CorrectMark{

}

input, textarea{
	font-family: arial,helvetica,sans-serif;
	font-size: 120%;
}

select{
	font-size: 100%;
}

div.Feedback {
	background-color: #800000;
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: #ffffff;
	position: absolute;
	display: none;
	font-size: 100%;
}




div.ExerciseDiv{
	color: #000000;
}

/* JMatch flashcard styles */
table.FlashcardTable{
	background-color: transparent;
	color: #000000;
	border-color: #000000;
	margin-left: 5%;
	margin-right: 5%;
	margin-top: 2em;
	margin-bottom: 2em;
	width: 90%;
	position: relative;
	text-align: center;
	padding: 0px;
}

table.FlashcardTable tr{
	border-style: none;
	margin: 0px;
	padding: 0px;
	background-color: #ff8000;
}

table.FlashcardTable td.Showing{
	font-size: 140%;
	text-align: center;
	width: 50%;
	display: table-cell;
	padding: 2em;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	color: #000000;
	background-color: #ff8000;
}

table.FlashcardTable td.Hidden{
	display: none;
}

/* JMix styles */
div#SegmentDiv{
	margin-top: 2em;
	margin-bottom: 2em;
	text-align: center;
}

a.ExSegment{
	font-size: 120%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

span.RemainingWordList{
	font-style: italic;
}

div.DropLine {
	position: absolute;
	text-align: center;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-bottom-color: #ffffff;
	width: 80%;
}

/* JCloze styles */

.ClozeWordList{
	text-align: center;
	font-weight: bold;
}

div.ClozeBody{
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	line-height: 2.0
}

span.GapSpan{
	font-weight: bold;
}

/* JCross styles */

table.CrosswordGrid{
	margin: auto auto 1em auto;
	border-collapse: collapse;
	padding: 0px;
	background-color: #000000;
}

table.CrosswordGrid tbody tr td{
	width: 1.5em;
	height: 1.5em;
	text-align: center;
	vertical-align: middle;
	font-size: 140%;
	padding: 1px;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-color: #000000;
	color: #000000;
}

table.CrosswordGrid span{
	color: #000000;
}

table.CrosswordGrid td.BlankCell{
	background-color: #000000;
	color: #000000;
}

table.CrosswordGrid td.LetterOnlyCell{
	text-align: center;
	vertical-align: middle;
	background-color: #ffffff;
	color: #000000;
	font-weight: bold;
}

table.CrosswordGrid td.NumLetterCell{
	text-align: left;
	vertical-align: top;
	background-color: #ffffff;
	color: #000000;
	padding: 1px;
	font-weight: bold;
}

.NumLetterCellText{
	cursor: pointer;
	color: #000000;
}

.GridNum{
	vertical-align: super;
	font-size: 66%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

.GridNum:hover, .GridNum:visited{
	color: #000000;
}

table#Clues{
	margin: auto;
	vertical-align: top;
}

table#Clues td{
	vertical-align: top;
}

table.ClueList{
  margin: auto;
}

td.ClueNum{
	text-align: right;
	font-weight: bold;
	vertical-align: top;
}

td.Clue{
	text-align: left;
}

div#ClueEntry{
	text-align: left;
	margin-bottom: 1em;
}

/* Keypad styles */

div.Keypad{
	text-align: center;
	display: none; /* initially hidden, shown if needed */
	margin-bottom: 0.5em;
}

div.Keypad button{
	font-family: arial,helvetica,sans-serif;
	font-size: 120%;
	background-color: #ffffff;
	color: #000000;
	width: 2em;
}

/* JQuiz styles */

div.QuestionNavigation{
	text-align: center;
}

.QNum{
	margin: 0em 1em 0.5em 1em;
	font-weight: bold;
	vertical-align: middle;
}

textarea{
	font-family: arial,helvetica,sans-serif;
}

.QuestionText{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

.Answer{
	font-size: 120%;
	letter-spacing: 0.1em;
}

.PartialAnswer{
	font-size: 120%;
	letter-spacing: 0.1em;
	color: #ffffff;
}

.Highlight{
	color: #000000;
	background-color: #ffff00;
	font-weight: bold;
	font-size: 120%;
}

ol.QuizQuestions{
	text-align: left;
	list-style-type: none;
}

li.QuizQuestion{
	padding: 1em;
	border-style: solid;
	border-width: 0px 0px 1px 0px;
}

ol.MCAnswers{
	text-align: left;
	list-style-type: upper-alpha;
	padding: 1em;
}

ol.MCAnswers li{
	margin-bottom: 1em;
}

ol.MSelAnswers{
	text-align: left;
	list-style-type: lower-alpha;
	padding: 1em;
}

div.ShortAnswer{
	padding: 1em;
}

.FuncButton {
	text-align: center;
	border-style: solid;

	border-left-color: #ffbf7f;
	border-top-color: #ffbf7f;
	border-right-color: #7f4000;
	border-bottom-color: #7f4000;
	color: #000000;
	background-color: #ff8000;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonUp {
	color: #ff8000;
	text-align: center;
	border-style: solid;

	border-left-color: #ffbf7f;
	border-top-color: #ffbf7f;
	border-right-color: #7f4000;
	border-bottom-color: #7f4000;

	background-color: #000000;
	color: #ff8000;
	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonDown {
	color: #ff8000;
	text-align: center;
	border-style: solid;

	border-left-color: #7f4000;
	border-top-color: #7f4000;
	border-right-color: #ffbf7f;
	border-bottom-color: #ffbf7f;
	background-color: #000000;
	color: #ff8000;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: #800000;
	text-align: center;
	margin: 2px 0px 2px 0px;
	clear: both;
	font-size: 100%;
}

.NavButton {
	border-style: solid;
	
	border-left-color: #bf7f7f;
	border-top-color: #bf7f7f;
	border-right-color: #400000;
	border-bottom-color: #400000;
	background-color: #800000;
	color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonUp {
	border-style: solid;

	border-left-color: #bf7f7f;
	border-top-color: #bf7f7f;
	border-right-color: #400000;
	border-bottom-color: #400000;
	color: #800000;
	background-color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonDown {
	border-style: solid;

	border-left-color: #400000;
	border-top-color: #400000;
	border-right-color: #bf7f7f;
	border-bottom-color: #bf7f7f;
	color: #800000;
	background-color: #ffffff;

	border-width: 2px;
	cursor: pointer;	
}

/*EndNavBarStyle*/

a{
	color: #008000;
}

a:visited{
	color: #0000ff;
}

a:hover{
	color: #008000;
}

div.CardStyle {
	position: absolute;
	font-family: arial,helvetica,sans-serif;
	font-size: 100%;
	padding: 5px;
	border-style: solid;
	border-width: 1px;
	color: #000000;
	background-color: #ff8000;
	left: -50px;
	top: -50px;
	overflow: visible;
}

.rtl{
	text-align: right;
	font-size: 140%;
}


</style>

<script type="text/javascript">

//<![CDATA[

<!--




function Client(){
//if not a DOM browser, hopeless
	this.min = false; if (document.getElementById){this.min = true;};

	this.ua = navigator.userAgent;
	this.name = navigator.appName;
	this.ver = navigator.appVersion;  

//Get data about the browser
	this.mac = (this.ver.indexOf('Mac') != -1);
	this.win = (this.ver.indexOf('Windows') != -1);

//Look for Gecko
	this.gecko = (this.ua.indexOf('Gecko') > 1);
	if (this.gecko){
		this.geckoVer = parseInt(this.ua.substring(this.ua.indexOf('Gecko')+6, this.ua.length));
//		if (this.geckoVer < 20020000){this.min = false;}
	}
	
//Look for Firebird
	this.firebird = (this.ua.indexOf('Firebird') > 1);
	
//Look for Safari
	this.safari = (this.ua.indexOf('Safari') > 1);
	if (this.safari){
		this.gecko = false;
	}
	
//Look for IE
	this.ie = (this.ua.indexOf('MSIE') > 0);
	if (this.ie){
		this.ieVer = parseFloat(this.ua.substring(this.ua.indexOf('MSIE')+5, this.ua.length));
		if (this.ieVer < 5.5){this.min = false;}
	}
	
//Look for Opera
	this.opera = (this.ua.indexOf('Opera') > 0);
	if (this.opera){
		this.operaVer = parseFloat(this.ua.substring(this.ua.indexOf('Opera')+6, this.ua.length));
		if (this.operaVer < 7.04){this.min = false;}
	}
	if (this.min == false){
//		alert('Your browser may not be able to handle this page.');
	}
	
//Special case for the horrible ie5mac
	this.ie5mac = (this.ie&&this.mac&&(this.ieVer<6));
}

var C = new Client();

//for (prop in C){
//	alert(prop + ': ' + C[prop]);
//}



//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

//[strNavBarJS]
function NavBtnOver(Btn){
	if (Btn.className != 'NavButtonDown'){Btn.className = 'NavButtonUp';}
}

function NavBtnOut(Btn){
	Btn.className = 'NavButton';
}

function NavBtnDown(Btn){
	Btn.className = 'NavButtonDown';
}
//[/strNavBarJS]

function FuncBtnOver(Btn){
	if (Btn.className != 'FuncButtonDown'){Btn.className = 'FuncButtonUp';}
}

function FuncBtnOut(Btn){
	Btn.className = 'FuncButton';
}

function FuncBtnDown(Btn){
	Btn.className = 'FuncButtonDown';
}

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');
	ShowElements(true, 'object', 'FeedbackContent');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
	
//
//	RefreshImages();
//
}

function ShowElements(Show, TagName, ContainerToReverse){
// added third argument to allow objects in the feedback box to appear
//IE bug -- hide all the form elements that will show through the popup
//FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
//unless the object's display property is changed

	//get container object (by Id passed in, or use document otherwise)
	TopNode = document.getElementById(ContainerToReverse);
	var Els;
	if (TopNode != null) {
		Els = TopNode.getElementsByTagName(TagName);
	} else {
		Els = document.getElementsByTagName(TagName);
	}

	for (var i=0; i<Els.length; i++){
		if (TagName == "object") {
			//manipulate object elements in all browsers
			if (Show == true){
				Els[i].style.visibility = 'visible';
				//get Mac FireFox to manipulate display, to force screen redraw
				if (C.mac && C.gecko) {Els[i].style.display = '';}
			}
			else{
				Els[i].style.visibility = 'hidden';
				if (C.mac && C.gecko) {Els[i].style.display = 'none';}
			}
		} 
		else {
			// tagName is either input or select (that is, Form Elements)
			// ie6 has a problem with Form elements, so manipulate those
			if (C.ie) {
				if (C.ieVer < 7) {
					if (Show == true){
						Els[i].style.visibility = 'visible';
					}
					else{
						Els[i].style.visibility = 'hidden';
					}
				}
			}
		}
	}
}



function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
	if (Finished == true){
		Finish();
	}
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].clientWidth;
	this.H = document.getElementsByTagName('body')[0].clientHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (typeof(window.pageYOffset) == 'number'){
		return window.pageYOffset;
	}
	else{
		if ((document.body)&&(document.body.scrollTop)){
			return document.body.scrollTop;
		}
		else{
			if ((document.documentElement)&&(document.documentElement.scrollTop)){
				return document.documentElement.scrollTop;
			}
			else{
				return 0;
			}
		}
	}
}

function GetViewportHeight(){
	if (typeof window.innerHeight != 'undefined'){
		return window.innerHeight;
	}
	else{
		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
     'undefined'))&&(document.documentElement.clientHeight != 0)){
			return document.documentElement.clientHeight;
		}
		else{
			return document.getElementsByTagName('body')[0].clientHeight;
		}
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	if (C.ie) {
		thisKey = window.event.keyCode;
	}
	else {
		thisKey = e.keyCode;
	}

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
	}

	if (Suppress == true){
		if (C.ie){
			window.event.returnValue = false;	
			window.event.cancelBubble = true;
		}
		else{
			e.preventDefault();
		}
	}
}

if (C.ie){
	document.attachEvent('onkeydown',SuppressBackspace);
	window.attachEvent('onkeydown',SuppressBackspace);
}
else{
	if (window.addEventListener){
		window.addEventListener('keypress',SuppressBackspace,false);
	}
}

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

	RefreshImages();

}



Imgs = new Array();

function PreloadImages(){
	var a = PreloadImages.arguments;
	for (var i=0; i<a.length; i++){
		Imgs[i] = new Image();
		Imgs[i].src = a[i];
	}
}

function RefreshImages(){
	for (var i=0; i<document.images.length; i++){
		if (document.images[i].name.substring(0,6) != 'NavBar'){
			document.images[i].src = document.images[i].src;
		}
	}
}


function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}

//EXTENSION TO ARRAY OBJECT
function Array_IndexOf(Input){
	var Result = -1;
	for (var i=0; i<this.length; i++){
		if (this[i] == Input){
			Result = i;
		}
	}
	return Result;
}
Array.prototype.indexOf = Array_IndexOf;

//IE HAS RENDERING BUG WITH BOTTOM NAVBAR
function RemoveBottomNavBarForIE(){
	if ((C.ie)&&(document.getElementById('Reading') != null)){
		if (document.getElementById('BottomNavBar') != null){
			document.getElementById('TheBody').removeChild(document.getElementById('BottomNavBar'));
		}
	}
}




//HOTPOTNET-RELATED CODE

var HPNStartTime = (new Date()).getTime();
var SubmissionTimeout = 30000;
var Detail = ''; //Global that is used to submit tracking data

function Finish(){
//If there's a form, fill it out and submit it
	if (document.store != null){
		Frm = document.store;
		Frm.starttime.value = HPNStartTime;
		Frm.endtime.value = (new Date()).getTime();
		Frm.mark.value = Score;
		Frm.detail.value = Detail;
		Frm.submit();
	}
}





//JCLOZE CORE JAVASCRIPT CODE

function ItemState(){
	this.ClueGiven = false;
	this.HintsAndChecks = 0;
	this.MatchedAnswerLength = 0;
	this.ItemScore = 0;
	this.AnsweredCorrectly = false;
	this.Guesses = new Array();
	return this;
}

var Feedback = '';
var Correct = 'Correcto! Bien hecho. ';
var Incorrect = 'Algunas de sus respuestas son incorrectas. Las respuestas incorrectas se han quedado en su lugar para que usted las cambie.'; 
var GiveHint = 'La siguiente letra correcta ha sido a&#x00F1;adida a la respuesta.';
var CaseSensitive = true;
var YourScoreIs = 'Su puntuaci&#x00F3;n es:';
var Finished = false;
var Locked = false;
var Score = 0;
var CurrentWord = 0;
var Guesses = '';
var TimeOver = false;

I = new Array();

I[0] = new Array();
I[0][1] = new Array();
I[0][1][0] = new Array();
I[0][1][0][0] = '\u0054\u0061\u0062\u006C\u0065\u0072\u006F';
I[0][1][1] = new Array();
I[0][1][1][0]='\u0054\u0041\u0042\u004C\u0045\u0052\u004F';
I[0][1][2] = new Array();
I[0][1][2][0]='\u0074\u0061\u0062\u006C\u0065\u0072\u006F';
I[0][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0030\u0030\u002D\u0041\u004A\u0045\u0044\u0052\u0045\u005A\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0030\u0030\u002D\u0041\u004A\u0045\u0044\u0052\u0045\u005A\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0030\u0030\u002D\u0041\u004A\u0045\u0044\u0052\u0045\u005A\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0032\u0037\u0035\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0031\u0038\u0033\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[1] = new Array();
I[1][1] = new Array();
I[1][1][0] = new Array();
I[1][1][0][0] = '\u0036\u0034';
I[1][1][1] = new Array();
I[1][1][1][0]='\u0033\u0032\u0020\u0078\u0020\u0032';
I[1][2]='\u0038\u0020\u0078\u0020\u0038';

I[2] = new Array();
I[2][1] = new Array();
I[2][1][0] = new Array();
I[2][1][0][0] = '\u0042\u006C\u0061\u006E\u0063\u0061\u0073';
I[2][1][1] = new Array();
I[2][1][1][0]='\u0042\u004C\u0041\u004E\u0043\u0041\u0053';
I[2][1][2] = new Array();
I[2][1][2][0]='\u0062\u006C\u0061\u006E\u0063\u0061\u0073';
I[2][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0030\u0039\u002D\u0050\u0049\u0045\u005A\u0041\u0053\u005F\u0042\u004C\u0041\u004E\u0043\u0041\u0053\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0030\u0039\u002D\u0050\u0049\u0045\u005A\u0041\u0053\u005F\u0042\u004C\u0041\u004E\u0043\u0041\u0053\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0030\u0039\u002D\u0050\u0049\u0045\u005A\u0041\u0053\u005F\u0042\u004C\u0041\u004E\u0043\u0041\u0053\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0031\u0030\u0030\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0031\u0035\u0030\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[3] = new Array();
I[3][1] = new Array();
I[3][1][0] = new Array();
I[3][1][0][0] = '\u004E\u0065\u0067\u0072\u0061\u0073';
I[3][1][1] = new Array();
I[3][1][1][0]='\u004E\u0045\u0047\u0052\u0041\u0053';
I[3][1][2] = new Array();
I[3][1][2][0]='\u006E\u0065\u0067\u0072\u0061\u0073';
I[3][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0031\u0030\u002D\u0050\u0049\u0045\u005A\u0041\u0053\u005F\u004E\u0045\u0047\u0052\u0041\u0053\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0031\u0030\u002D\u0050\u0049\u0045\u005A\u0041\u0053\u005F\u004E\u0045\u0047\u0052\u0041\u0053\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0031\u0030\u002D\u0050\u0049\u0045\u005A\u0041\u0053\u005F\u004E\u0045\u0047\u0052\u0041\u0053\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0031\u0030\u0030\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0035\u0035\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[4] = new Array();
I[4][1] = new Array();
I[4][1][0] = new Array();
I[4][1][0][0] = '\u0050\u0069\u0065\u007A\u0061\u0073';
I[4][1][1] = new Array();
I[4][1][1][0]='\u0050\u0049\u0045\u005A\u0041\u0053';
I[4][1][2] = new Array();
I[4][1][2][0]='\u0070\u0069\u0065\u007A\u0061\u0073';
I[4][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0031\u0035\u002D\u0050\u0049\u0045\u005A\u0041\u0053\u005F\u0044\u0045\u005F\u0041\u004A\u0045\u0044\u0052\u0045\u005A\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0031\u0035\u002D\u0050\u0049\u0045\u005A\u0041\u0053\u005F\u0044\u0045\u005F\u0041\u004A\u0045\u0044\u0052\u0045\u005A\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0031\u0035\u002D\u0050\u0049\u0045\u005A\u0041\u0053\u005F\u0044\u0045\u005F\u0041\u004A\u0045\u0044\u0052\u0045\u005A\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0031\u0030\u0030\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0035\u0036\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[5] = new Array();
I[5][1] = new Array();
I[5][1][0] = new Array();
I[5][1][0][0] = '\u0052\u0065\u0067\u006C\u0061\u0073';
I[5][1][1] = new Array();
I[5][1][1][0]='\u0052\u0045\u0047\u004C\u0041\u0053';
I[5][1][2] = new Array();
I[5][1][2][0]='\u0072\u0065\u0067\u006C\u0061\u0073';
I[5][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0031\u0031\u005F\u0052\u0045\u0047\u004C\u0041\u004D\u0045\u004E\u0054\u004F\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0031\u0031\u005F\u0052\u0045\u0047\u004C\u0041\u004D\u0045\u004E\u0054\u004F\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0031\u0031\u005F\u0052\u0045\u0047\u004C\u0041\u004D\u0045\u004E\u0054\u004F\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0031\u0030\u0030\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0031\u0034\u0036\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[6] = new Array();
I[6][1] = new Array();
I[6][1][0] = new Array();
I[6][1][0][0] = '\u0050\u0065\u006F\u006E\u0065\u0073';
I[6][1][1] = new Array();
I[6][1][1][0]='\u0050\u0045\u004F\u004E\u0045\u0053';
I[6][1][2] = new Array();
I[6][1][2][0]='\u0070\u0065\u006F\u006E\u0065\u0073';
I[6][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0030\u0036\u002D\u0050\u0045\u004F\u004E\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0030\u0036\u002D\u0050\u0045\u004F\u004E\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0030\u0036\u002D\u0050\u0045\u004F\u004E\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0034\u0035\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0037\u0037\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[7] = new Array();
I[7][1] = new Array();
I[7][1][0] = new Array();
I[7][1][0][0] = '\u0043\u0061\u0062\u0061\u006C\u006C\u006F\u0073';
I[7][1][1] = new Array();
I[7][1][1][0]='\u0043\u0041\u0042\u0041\u004C\u004C\u004F';
I[7][1][2] = new Array();
I[7][1][2][0]='\u0063\u0061\u0062\u0061\u006C\u006C\u006F';
I[7][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0030\u0034\u002D\u0043\u0041\u0042\u0041\u004C\u004C\u004F\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0030\u0034\u002D\u0043\u0041\u0042\u0041\u004C\u004C\u004F\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0030\u0034\u002D\u0043\u0041\u0042\u0041\u004C\u004C\u004F\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0034\u0035\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0039\u0030\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[8] = new Array();
I[8][1] = new Array();
I[8][1][0] = new Array();
I[8][1][0][0] = '\u0041\u006C\u0066\u0069\u006C\u0065\u0073';
I[8][1][1] = new Array();
I[8][1][1][0]='\u0041\u004C\u0046\u0049\u004C\u0045\u0053';
I[8][1][2] = new Array();
I[8][1][2][0]='\u0061\u006C\u0066\u0069\u006C\u0065\u0073';
I[8][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0030\u0035\u002D\u0041\u004C\u0046\u0049\u004C\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0030\u0035\u002D\u0041\u004C\u0046\u0049\u004C\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0030\u0035\u002D\u0041\u004C\u0046\u0049\u004C\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0034\u0035\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0031\u0030\u0031\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[9] = new Array();
I[9][1] = new Array();
I[9][1][0] = new Array();
I[9][1][0][0] = '\u0052\u0065\u0079';
I[9][1][1] = new Array();
I[9][1][1][0]='\u0052\u0045\u0059';
I[9][1][2] = new Array();
I[9][1][2][0]='\u0072\u0065\u0079';
I[9][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0030\u0031\u002D\u0052\u0045\u0059\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0030\u0031\u002D\u0052\u0045\u0059\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0030\u0031\u002D\u0052\u0045\u0059\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0034\u0035\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0031\u0032\u0034\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[10] = new Array();
I[10][1] = new Array();
I[10][1][0] = new Array();
I[10][1][0][0] = '\u0044\u0061\u006D\u0061';
I[10][1][1] = new Array();
I[10][1][1][0]='\u0044\u0041\u004D\u0041';
I[10][1][2] = new Array();
I[10][1][2][0]='\u0064\u0061\u006D\u0061';
I[10][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0030\u0032\u002D\u0044\u0041\u004D\u0041\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0030\u0032\u002D\u0044\u0041\u004D\u0041\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0030\u0032\u002D\u0044\u0041\u004D\u0041\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0034\u0035\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0031\u0030\u0032\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[11] = new Array();
I[11][1] = new Array();
I[11][1][0] = new Array();
I[11][1][0][0] = '\u004A\u0061\u0071\u0075\u0065\u0020\u004D\u0061\u0074\u0065';
I[11][1][1] = new Array();
I[11][1][1][0]='\u004A\u0041\u0051\u0055\u0045\u0020\u004D\u0041\u0054\u0045';
I[11][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0031\u0034\u002D\u004A\u0041\u0051\u0055\u0045\u005F\u004D\u0041\u0054\u0045\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0031\u0034\u002D\u004A\u0041\u0051\u0055\u0045\u005F\u004D\u0041\u0054\u0045\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0031\u0034\u002D\u004A\u0041\u0051\u0055\u0045\u005F\u004D\u0041\u0054\u0045\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0031\u0030\u0030\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0036\u0033\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[12] = new Array();
I[12][1] = new Array();
I[12][1][0] = new Array();
I[12][1][0][0] = '\u0050\u0061\u0072\u0074\u0069\u0064\u0061';
I[12][1][1] = new Array();
I[12][1][1][0]='\u0050\u0041\u0052\u0054\u0049\u0044\u0041';
I[12][1][2] = new Array();
I[12][1][2][0]='\u0070\u0061\u0072\u0074\u0069\u0064\u0061';
I[12][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0031\u0032\u002D\u0050\u0041\u0052\u0054\u0049\u0044\u0041\u005F\u0044\u0045\u005F\u0041\u004A\u0045\u0044\u0052\u0045\u005A\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0031\u0032\u002D\u0050\u0041\u0052\u0054\u0049\u0044\u0041\u005F\u0044\u0045\u005F\u0041\u004A\u0045\u0044\u0052\u0045\u005A\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0031\u0032\u002D\u0050\u0041\u0052\u0054\u0049\u0044\u0041\u005F\u0044\u0045\u005F\u0041\u004A\u0045\u0044\u0052\u0045\u005A\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0031\u0030\u0030\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0031\u0030\u0030\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[13] = new Array();
I[13][1] = new Array();
I[13][1][0] = new Array();
I[13][1][0][0] = '\u0052\u0069\u0076\u0061\u006C';
I[13][1][1] = new Array();
I[13][1][1][0]='\u0052\u0049\u0056\u0041\u004C';
I[13][1][2] = new Array();
I[13][1][2][0]='\u0072\u0069\u0076\u0061\u006C';
I[13][2]='\u003C\u0069\u006D\u0067\u0020\u0073\u0072\u0063\u003D\u0022\u0031\u0033\u002D\u0052\u0049\u0056\u0041\u004C\u002E\u006A\u0070\u0067\u0022\u0020\u0061\u006C\u0074\u003D\u0022\u0031\u0033\u002D\u0052\u0049\u0056\u0041\u004C\u002E\u006A\u0070\u0067\u0022\u0020\u0074\u0069\u0074\u006C\u0065\u003D\u0022\u0031\u0033\u002D\u0052\u0049\u0056\u0041\u004C\u0022\u0020\u0077\u0069\u0064\u0074\u0068\u003D\u0022\u0031\u0030\u0030\u0022\u0020\u0068\u0065\u0069\u0067\u0068\u0074\u003D\u0022\u0036\u0033\u0022\u003E\u003C\u002F\u0069\u006D\u0067\u003E';

I[14] = new Array();
I[14][1] = new Array();
I[14][1][0] = new Array();
I[14][1][0][0] = '\u0070\u00E9\u0072\u0064\u0069\u0064\u0061';
I[14][2]='';


State = new Array();

function StartUp(){
	RemoveBottomNavBarForIE();
//Show a keypad if there is one	(added bugfix for 6.0.4.12)
	if (document.getElementById('CharacterKeypad') != null){
		document.getElementById('CharacterKeypad').style.display = 'block';
	}
	





	PreloadImages('00-AJEDREZ.jpg');


	var i = 0;

	State.length = 0;
	for (i=0; i<I.length; i++){
		State[i] = new ItemState();
	}
	
	ClearTextBoxes();
	

	StartTimer();


}

function ShowClue(ItemNum){
	if (Locked == true){return;}
	State[ItemNum].ClueGiven = true;
	ShowMessage(I[ItemNum][2]);
}

function SaveCurrentAnswers(){
	var Ans = '';
	for (var i=0; i<I.length; i++){
		Ans = GetGapValue(i);
		if ((Ans.length > 0)&&(Ans != State[i].Guesses[State[i].Guesses.length-1])){
			State[i].Guesses[State[i].Guesses.length] = Ans;
		}
	}
}

function CompileGuesses(){
	var F = document.getElementById('store');
	if (F != null){
		var Temp = '<?xml version="1.0"?><hpnetresult><fields>';
		var GapLabel = '';
		for (var i=0; i<State.length; i++){
			GapLabel = 'Gap ' + (i+1).toString();
			Temp += '<field><fieldname>' + GapLabel + '</fieldname>';
			Temp += '<fieldtype>student-responses</fieldtype><fieldlabel>' + GapLabel + '</fieldlabel>';
			Temp += '<fieldlabelid>JClozeStudentResponses</fieldlabelid><fielddata>';
			for (var j=0; j<State[i].Guesses.length; j++){
				if (j>0){Temp += '| ';}
				Temp += State[i].Guesses[j] + ' ';	
			}	
  		Temp += '</fielddata></field>';
		}
		Temp += '</fields></hpnetresult>';
		Detail = Temp;
	}
}

function CheckAnswers(){
	if (Locked == true){return;}
	SaveCurrentAnswers();
	var AllCorrect = true;

//Check each answer
	for (var i = 0; i<I.length; i++){

		if (State[i].AnsweredCorrectly == false){
//If it's right, calculate its score
			if (CheckAnswer(i, true) > -1){
				var TotalChars = GetGapValue(i).length;
				State[i].ItemScore = (TotalChars-State[i].HintsAndChecks)/TotalChars;
				if (State[i].ClueGiven == true){State[i].ItemScore /= 2;}
				if (State[i].ItemScore <0 ){State[i].ItemScore = 0;}
				State[i].AnsweredCorrectly = true;
//Drop the correct answer into the page, replacing the text box
				SetCorrectAnswer(i, GetGapValue(i));
			}
			else{
//Otherwise, increment the hints for this item, as a penalty
				State[i].HintsAndChecks++;

//then set the flag
				AllCorrect = false;
			}
		}
	}

//Calculate the total score
	var TotalScore = 0;
	for (i=0; i<State.length; i++){
		TotalScore += State[i].ItemScore;
	}
	TotalScore = Math.floor((TotalScore * 100)/I.length);

//Compile the output
	Output = '';

	if (AllCorrect == true){
		Output = Correct + '<br />';
	}

	Output += YourScoreIs + ' ' + TotalScore + '%.<br />';
	if (AllCorrect == false){
		Output += Incorrect;
	}
	ShowMessage(Output);
	setTimeout('WriteToInstructions(Output)', 50);
	
	Score = TotalScore;
	CompileGuesses();
	
	if ((AllCorrect == true)||(Finished == true)){
	


		window.clearInterval(Interval);

		TimeOver = true;
		Locked = true;
		Finished = true;
		setTimeout('Finish()', SubmissionTimeout);
	}

}

function TrackFocus(BoxNumber){
	CurrentWord = BoxNumber;
	InTextBox = true;
}

function LeaveGap(){
	InTextBox = false;
}

function CheckBeginning(Guess, Answer){
	var OutString = '';
	var i = 0;
	var UpperGuess = '';
	var UpperAnswer = '';

	if (CaseSensitive == false) {
		UpperGuess = Guess.toUpperCase();
		UpperAnswer = Answer.toUpperCase();
	}
	else {
		UpperGuess = Guess;
		UpperAnswer = Answer;
	}

	while (UpperGuess.charAt(i) == UpperAnswer.charAt(i)) {
		OutString += Guess.charAt(i);
		i++;
	}
	OutString += Answer.charAt(i);
	return OutString;
}

function GetGapValue(GNum){
	var RetVal = '';
	if ((GNum<0)||(GNum>=I.length)){return RetVal;}
	if (document.getElementById('Gap' + GNum) != null){
		RetVal = document.getElementById('Gap' + GNum).value;
		RetVal = TrimString(RetVal);
	}
	else{
		RetVal = State[GNum].Guesses[State[GNum].Guesses.length-1];
	}
	return RetVal;
}

function SetGapValue(GNum, Val){
	if ((GNum<0)||(GNum>=I.length)){return;}
	if (document.getElementById('Gap' + GNum) != null){
		document.getElementById('Gap' + GNum).value = Val;
		document.getElementById('Gap' + GNum).focus();
	}
}

function SetCorrectAnswer(GNum, Val){
	if ((GNum<0)||(GNum>=I.length)){return;}
	if (document.getElementById('GapSpan' + GNum) != null){
		document.getElementById('GapSpan' + GNum).innerHTML = Val;
	}
}

function FindCurrent() {
	var x = 0;
	FoundCurrent = -1;

//Test the current word:
//If its state is not set to already correct, check the word.
	if (State[CurrentWord].AnsweredCorrectly == false){
		if (CheckAnswer(CurrentWord, false) < 0){
			return CurrentWord;
		}
	}
	
	x=CurrentWord + 1;
	while (x<I.length){
		if (State[x].AnsweredCorrectly == false){
			if (CheckAnswer(x, false) < 0){
				return x;
			}
		}
	x++;	
	}

	x = 0;
	while (x<CurrentWord){
		if (State[x].AnsweredCorrectly == false){
			if (CheckAnswer(x, false) < 0){
				return x;
			}
		}
	x++;	
	}
	return FoundCurrent;
}

function CheckAnswer(GapNum, MarkAnswer){
	var Guess = GetGapValue(GapNum);
	var UpperGuess = '';
	var UpperAnswer = '';
	if (CaseSensitive == false){
		UpperGuess = Guess.toUpperCase();
	}
	else{
		UpperGuess = Guess;
	}
	var Match = -1;
	for (var i = 0; i<I[GapNum][1].length; i++){
		if (CaseSensitive == false){
			UpperAnswer = I[GapNum][1][i][0].toUpperCase();
		}
		else{
			UpperAnswer = I[GapNum][1][i][0];
		}
		if (TrimString(UpperGuess) == UpperAnswer){
			Match = i;
			if (MarkAnswer == true){
				State[GapNum].AnsweredCorrectly = true;
			}
		}
	}
	return Match;
}

function GetHint(GapNum){
	Guess = GetGapValue(GapNum);

	if (CheckAnswer(GapNum, false) > -1){return ''}
	RightBits = new Array();
	for (var i=0; i<I[GapNum][1].length; i++){
		RightBits[i] = CheckBeginning(Guess, I[GapNum][1][i][0]);
	}
	var RightOne = FindLongest(RightBits);
	var Result = I[GapNum][1][RightOne][0].substring(0,RightBits[RightOne].length);
//Add another char if the last one is a space
	if (Result.charAt(Result.length-1) == ' '){
		Result = I[GapNum][1][RightOne][0].substring(0,RightBits[RightOne].length+1);
	}
	return Result;
}

function ShowHint(){
	if (document.getElementById('FeedbackDiv').style.display == 'block'){return;}
	if (Locked == true){return;}
	var CurrGap = FindCurrent();
	if (CurrGap < 0){return;}

	var HintString = GetHint(CurrGap);

	if (HintString.length > 0){
		SetGapValue(CurrGap, HintString);
		State[CurrGap].HintsAndChecks += 1;
	}
	ShowMessage(GiveHint);
}

function TypeChars(Chars){
	var CurrGap = FindCurrent();
	if (CurrGap < 0){return;}
	if (document.getElementById('Gap' + CurrGap) != null){
		SetGapValue(CurrGap, document.getElementById('Gap' + CurrGap).value + Chars);
	}
}


function TimesUp() {
	document.getElementById('Timer').innerHTML = 'Su tiempo ha finalizado';

	RefreshImages();

	TimeOver = true;
	Finished = true;
	CheckAnswers();
	Locked = true;

}






//CODE FOR HANDLING TIMER
//Timer code
var Seconds = 600;
var Interval = null;

function StartTimer(){
	Interval = window.setInterval('DownTime()',1000);
	document.getElementById('TimerText').style.display = 'inline';
}

function DownTime(){
	var ss = Seconds % 60;
	if (ss<10){
		ss='0' + ss + '';
	}

	var mm = Math.floor(Seconds / 60);

	if (document.getElementById('Timer') == null){
		return;
	}

	document.getElementById('TimerText').innerHTML = mm + ':' + ss;
	if (Seconds < 1){
		window.clearInterval(Interval);
		TimeOver = true;
		TimesUp();
	}
	Seconds--;
}






//-->

//]]>

</script>


</head>

<body onload="StartUp()" id="TheBody" >

<!-- BeginTopNavButtons -->


<div class="NavButtonBar" id="TopNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=Ejercicio Anterior</button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='index.htm'; return false;"> Index </button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='JQuiz_de_Benamo.htm'; return false;">=&gt;Siguiente Ejercicio</button>


</div>



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle">FABULA SOBRE EL ORIGEN DEL AJEDREZ</h2>

	<h3 class="ExerciseSubtitle">(Ejercicio 03)<br /><img src="00-AJEDREZ.jpg" alt="00-AJEDREZ.jpg" title="00-AJEDREZ" width="275" height="183"></img></h3>


<div id="Timer"><span id="TimerText">&nbsp;&nbsp;</span></div>


</div>

<div id="InstructionsDiv" class="StdDiv">
	<div id="Instructions">Rellene todos los huecos, a continuaci&#x00F3;n, pulse el bot&#x00F3;n "Comprobar Respuesta" para comprobar tus respuestas. Utilice el bot&#x00F3;n "Pista" para ver una letra si la respuesta que est&#x00E1; dando problemas. Tambi&#x00E9;n puede hacer clic en el bot&#x00F3;n "[?]" Para conseguir una pista. Tenga en cuenta que perder&#x00E1; puntos si te pide consejos o pistas!</div>
</div>




<div id="WordsDiv" class="StdDiv">
<span id="WordList" class="ClozeWordList">&#160;&#160; 64 &#160;&#160;&#160;&#160; Alfiles &#160;&#160;&#160;&#160; Blancas &#160;&#160;&#160;&#160; Caballos &#160;&#160;&#160;&#160; Dama &#160;&#160;&#160;&#160; Jaque Mate &#160;&#160;&#160;&#160; Negras &#160;&#160;&#160;&#160; p&#x00E9;rdida &#160;&#160;&#160;&#160; Partida &#160;&#160;&#160;&#160; Peones &#160;&#160;&#160;&#160; Piezas &#160;&#160;&#160;&#160; Reglas &#160;&#160;&#160;&#160; Rey &#160;&#160;&#160;&#160; Rival &#160;&#160;&#160;&#160; Tablero &#160;&#160;</span>
</div>


<div id="MainDiv" class="StdDiv">

<!-- These top buttons hidden; reveal if required -->
<!--
<button id="CheckButton1" class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckAnswers()">&nbsp;Comprobar Respuesta&nbsp;</button>



 -->
 
<div id="ClozeDiv">
<form id="Cloze" method="post" action="" onsubmit="return false;">
<div class="ClozeBody">
 Un d&#x00ED;a, un modesto brahman llamado Lahur Sissa consigui&#x00F3; audiencia del monarca con el objeto de tratar de poner fin a su melancol&#x00ED;a. Cuando el brahman estuvo frente al Rey le present&#x00F3; un <span class="GapSpan" id="GapSpan0"><select id="Gap0"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(0)">[?]</button></span> cuadrado, dividido en <span class="GapSpan" id="GapSpan1"><select id="Gap1"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(1)">[?]</button></span> casillas, la mitad negras y la mitad blancas. Sobre dicho tablero se colocaban dos conjuntos de piezas, unas <span class="GapSpan" id="GapSpan2"><select id="Gap2"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(2)">[?]</button></span> y otras <span class="GapSpan" id="GapSpan3"><select id="Gap3"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(3)">[?]</button></span>, cada una a un lado del tablero. Las <span class="GapSpan" id="GapSpan4"><select id="Gap4"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(4)">[?]</button></span> eran las mismas para ambos bandos y se reg&#x00ED;an por estrictas <span class="GapSpan" id="GapSpan5"><select id="Gap5"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(5)">[?]</button></span> de movimiento.<br />Cada bando contaba con 8 <span class="GapSpan" id="GapSpan6"><select id="Gap6"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(6)">[?]</button></span> (infanter&#x00ED;a), 2 elefantes de guerra (<span class="GapSpan" id="GapSpan7"><select id="Gap7"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(7)">[?]</button></span> en el ajedrez occidental) que pod&#x00ED;an salta por encima de otras piezas, 2 visires del Rey (<span class="GapSpan" id="GapSpan8"><select id="Gap8"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(8)">[?]</button></span>) capaces de moverse a lo largo de una diagonal, 1 <span class="GapSpan" id="GapSpan9"><select id="Gap9"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(9)">[?]</button></span> y 1 consejero o alferza (<span class="GapSpan" id="GapSpan10"><select id="Gap10"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(10)">[?]</button></span>). El jugador que diese muerte al Rey rival (<span class="GapSpan" id="GapSpan11"><select id="Gap11"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(11)">[?]</button></span>) ganar&#x00ED;a la <span class="GapSpan" id="GapSpan12"><select id="Gap12"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(12)">[?]</button></span>.<br />Seg&#x00FA;n el brahman, el alferza representa el patriotismo del pueblo, por eso es tan poderoso, porque el poder del Rey reside en sus s&#x00FA;bditos.<br />Al Rey le entusiasm&#x00F3; el juego y &#x00E9;ste se convirti&#x00F3; en su pasatiempo favorito. Pronto no tuvo <span class="GapSpan" id="GapSpan13"><select id="Gap13"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select><button style="line-height: 1.0" class="FuncButton" onfocus="FuncBtnOver(this)" onmouseover="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="ShowClue(13)">[?]</button></span> que le venciese y pudo ir olvidando la <span class="GapSpan" id="GapSpan14"><select id="Gap14"><option value=""></option><option value="64">64</option><option value="Alfiles">Alfiles</option><option value="Blancas">Blancas</option><option value="Caballos">Caballos</option><option value="Dama">Dama</option><option value="Jaque Mate">Jaque Mate</option><option value="Negras">Negras</option><option value="p&#x00E9;rdida">p&#x00E9;rdida</option><option value="Partida">Partida</option><option value="Peones">Peones</option><option value="Piezas">Piezas</option><option value="Reglas">Reglas</option><option value="Rey">Rey</option><option value="Rival">Rival</option><option value="Tablero">Tablero</option></select></span> de su hijo.<br /><br />
</div>
</form>
</div>



<button id="CheckButton2" class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckAnswers()">&nbsp;Comprobar Respuesta&nbsp;</button>



</div>



<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="HideFeedback(); return false;">&nbsp;Ok.&nbsp;</button>
</div>

<!-- BeginBottomNavButtons -->


<div class="NavButtonBar" id="BottomNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=Ejercicio Anterior</button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='index.htm'; return false;"> Index </button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location='JQuiz_de_Benamo.htm'; return false;">=&gt;Siguiente Ejercicio</button>


</div>



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>
